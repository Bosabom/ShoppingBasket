// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShoppingBasket.Server.Data;

#nullable disable

namespace ShoppingBasket.Server.Migrations
{
    [DbContext(typeof(ShoppingBasketDbContext))]
    partial class ShoppingBasketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("receipt_number_seq");

            modelBuilder.Entity("ShoppingBasket.Server.Models.Discount", b =>
                {
                    b.Property<long>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("discount_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DiscountId"));

                    b.Property<int>("DiscountType")
                        .HasColumnType("integer")
                        .HasColumnName("discount_type");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint")
                        .HasColumnName("item_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("numeric")
                        .HasColumnName("percentage");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.HasKey("DiscountId");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("discount");

                    b.HasData(
                        new
                        {
                            DiscountId = 1L,
                            DiscountType = 0,
                            IsActive = true,
                            ItemId = 4L,
                            Name = "Apples 10% off",
                            Percentage = 10m
                        },
                        new
                        {
                            DiscountId = 2L,
                            DiscountType = 1,
                            IsActive = true,
                            ItemId = 2L,
                            Name = "Buy 2 soups get bread half price",
                            Percentage = 50m
                        });
                });

            modelBuilder.Entity("ShoppingBasket.Server.Models.Item", b =>
                {
                    b.Property<long>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("item_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ItemId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("ItemType")
                        .HasColumnType("integer")
                        .HasColumnName("item_type");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("ItemId");

                    b.ToTable("item");

                    b.HasData(
                        new
                        {
                            ItemId = 1L,
                            Description = "Tomato Soup (400g)",
                            ItemType = 0,
                            Price = 0.65m
                        },
                        new
                        {
                            ItemId = 2L,
                            Description = "Wholemeal Bread (800g)",
                            ItemType = 1,
                            Price = 0.80m
                        },
                        new
                        {
                            ItemId = 3L,
                            Description = "Semi-skimmed Milk (1L)",
                            ItemType = 2,
                            Price = 1.30m
                        },
                        new
                        {
                            ItemId = 4L,
                            Description = "Apples bag",
                            ItemType = 3,
                            Price = 1m
                        });
                });

            modelBuilder.Entity("ShoppingBasket.Server.Models.ItemOrdered", b =>
                {
                    b.Property<long>("ItemOrderedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("item_ordered_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ItemOrderedId"));

                    b.Property<long?>("DiscountId")
                        .HasColumnType("bigint")
                        .HasColumnName("discount_id");

                    b.Property<decimal?>("DiscountedCost")
                        .HasColumnType("numeric")
                        .HasColumnName("discounted_cost");

                    b.Property<bool>("IsDiscounted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_discounted");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint")
                        .HasColumnName("item_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<long>("ReceiptId")
                        .HasColumnType("bigint")
                        .HasColumnName("receipt_id");

                    b.Property<decimal>("SubTotalCost")
                        .HasColumnType("numeric")
                        .HasColumnName("sub_total_cost");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("numeric")
                        .HasColumnName("total_cost");

                    b.HasKey("ItemOrderedId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("item_ordered");
                });

            modelBuilder.Entity("ShoppingBasket.Server.Models.Receipt", b =>
                {
                    b.Property<long>("ReceiptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("receipt_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ReceiptId"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_datetime");

                    b.Property<long>("ReceiptNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("receipt_number")
                        .HasDefaultValueSql("nextval('receipt_number_seq')");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("numeric")
                        .HasColumnName("total_cost");

                    b.HasKey("ReceiptId");

                    b.ToTable("receipt");
                });

            modelBuilder.Entity("ShoppingBasket.Server.Models.Discount", b =>
                {
                    b.HasOne("ShoppingBasket.Server.Models.Item", "Item")
                        .WithOne("Discount")
                        .HasForeignKey("ShoppingBasket.Server.Models.Discount", "ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ShoppingBasket.Server.Models.ItemOrdered", b =>
                {
                    b.HasOne("ShoppingBasket.Server.Models.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ShoppingBasket.Server.Models.Item", "Item")
                        .WithMany("ItemsOrdered")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShoppingBasket.Server.Models.Receipt", "Receipt")
                        .WithMany("ItemsOrdered")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Item");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("ShoppingBasket.Server.Models.Item", b =>
                {
                    b.Navigation("Discount");

                    b.Navigation("ItemsOrdered");
                });

            modelBuilder.Entity("ShoppingBasket.Server.Models.Receipt", b =>
                {
                    b.Navigation("ItemsOrdered");
                });
#pragma warning restore 612, 618
        }
    }
}
